{"id":"node_modules/cls-bluebird/lib/shimOnCancel.js","dependencies":[{"name":"/home/rohan/zabbixScripts/zclient/package.json","includedInParent":true,"mtime":1551782286517},{"name":"/home/rohan/zabbixScripts/zclient/.babelrc","includedInParent":true,"mtime":1551702730921},{"name":"/home/rohan/zabbixScripts/zclient/node_modules/cls-bluebird/package.json","includedInParent":true,"mtime":1551774909521},{"name":"shimmer","loc":{"line":10,"column":22},"parent":"/home/rohan/zabbixScripts/zclient/node_modules/cls-bluebird/lib/shimOnCancel.js","resolved":"/home/rohan/zabbixScripts/zclient/node_modules/shimmer/index.js"}],"generated":{"js":"'use strict';\n\n/*\n * cls-bluebird\n * Function to shim `Promise.prototype._resolveFromExecutor`\n * in order to patch `onCancel` handler in `new Promise()`.\n */\n\n// Modules\nvar shimmer = require('shimmer');\n\n// Exports\n\n/**\n * Patch `_resolveFromExecutor` proto method to run `onCancel` callbacks in current CLS context.\n *\n * @param {Function} Promise - Bluebird Promise constructor to patch\n * @param {Object} ns - CLS namespace to bind callbacks to\n * @returns {undefined}\n */\nmodule.exports = function(Promise, ns) {\n\t// Patch method\n\tshimmer.wrap(Promise.prototype, '_resolveFromExecutor', function(_resolveFromExecutorOriginal) {\n\t\treturn function(executor) {\n\t\t\t// Patch executor\n\t\t\tvar executorPatched = function() {\n\t\t\t\tvar onCancel = arguments[2];\n\t\t\t\tif (onCancel) {\n\t\t\t\t\t// Patch onCancel function\n\t\t\t\t\targuments[2] = function(fn) {\n\t\t\t\t\t\t// Bind onCancel handler to current CLS context\n\t\t\t\t\t\tif (typeof fn === 'function') fn = ns.bind(fn);\n\t\t\t\t\t\treturn onCancel.call(this, fn);\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\treturn executor.apply(this, arguments);\n\t\t\t};\n\n\t\t\t// Call original method\n\t\t\treturn _resolveFromExecutorOriginal.call(this, executorPatched);\n\t\t};\n\t});\n};\n","map":{"mappings":[{"source":"node_modules/cls-bluebird/lib/shimOnCancel.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimOnCancel.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimOnCancel.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimOnCancel.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimOnCancel.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimOnCancel.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimOnCancel.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimOnCancel.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimOnCancel.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimOnCancel.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimOnCancel.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimOnCancel.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimOnCancel.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimOnCancel.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimOnCancel.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimOnCancel.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimOnCancel.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimOnCancel.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimOnCancel.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimOnCancel.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimOnCancel.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimOnCancel.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimOnCancel.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimOnCancel.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimOnCancel.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimOnCancel.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimOnCancel.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimOnCancel.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimOnCancel.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimOnCancel.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimOnCancel.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimOnCancel.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimOnCancel.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimOnCancel.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimOnCancel.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimOnCancel.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimOnCancel.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimOnCancel.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimOnCancel.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimOnCancel.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimOnCancel.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimOnCancel.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimOnCancel.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimOnCancel.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimOnCancel.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}}],"sources":{"node_modules/cls-bluebird/lib/shimOnCancel.js":"'use strict';\n\n/*\n * cls-bluebird\n * Function to shim `Promise.prototype._resolveFromExecutor`\n * in order to patch `onCancel` handler in `new Promise()`.\n */\n\n// Modules\nvar shimmer = require('shimmer');\n\n// Exports\n\n/**\n * Patch `_resolveFromExecutor` proto method to run `onCancel` callbacks in current CLS context.\n *\n * @param {Function} Promise - Bluebird Promise constructor to patch\n * @param {Object} ns - CLS namespace to bind callbacks to\n * @returns {undefined}\n */\nmodule.exports = function(Promise, ns) {\n\t// Patch method\n\tshimmer.wrap(Promise.prototype, '_resolveFromExecutor', function(_resolveFromExecutorOriginal) {\n\t\treturn function(executor) {\n\t\t\t// Patch executor\n\t\t\tvar executorPatched = function() {\n\t\t\t\tvar onCancel = arguments[2];\n\t\t\t\tif (onCancel) {\n\t\t\t\t\t// Patch onCancel function\n\t\t\t\t\targuments[2] = function(fn) {\n\t\t\t\t\t\t// Bind onCancel handler to current CLS context\n\t\t\t\t\t\tif (typeof fn === 'function') fn = ns.bind(fn);\n\t\t\t\t\t\treturn onCancel.call(this, fn);\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\treturn executor.apply(this, arguments);\n\t\t\t};\n\n\t\t\t// Call original method\n\t\t\treturn _resolveFromExecutorOriginal.call(this, executorPatched);\n\t\t};\n\t});\n};\n"},"lineCount":45}},"hash":"a81f1d3aee1e04b0ddeefc153d5eba86","cacheData":{"env":{}}}