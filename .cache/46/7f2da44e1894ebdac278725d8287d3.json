{"id":"node_modules/cls-bluebird/lib/shimMethod.js","dependencies":[{"name":"/home/rohan/zabbixScripts/zclient/package.json","includedInParent":true,"mtime":1551782286517},{"name":"/home/rohan/zabbixScripts/zclient/.babelrc","includedInParent":true,"mtime":1551702730921},{"name":"/home/rohan/zabbixScripts/zclient/node_modules/cls-bluebird/package.json","includedInParent":true,"mtime":1551774909521},{"name":"shimmer","loc":{"line":9,"column":22},"parent":"/home/rohan/zabbixScripts/zclient/node_modules/cls-bluebird/lib/shimMethod.js","resolved":"/home/rohan/zabbixScripts/zclient/node_modules/shimmer/index.js"}],"generated":{"js":"'use strict';\n\n/*\n * cls-bluebird\n * Function to shim an object method to retain CLS context\n */\n\n// Modules\nvar shimmer = require('shimmer');\n\n// Exports\n\n/**\n * Patch method to run callbacks in current CLS context.\n *\n * @param {Object} obj - Object on which to find method\n * @param {string} methodName - method name\n * @param {Array} args - Array of indexes of arguments which are callbacks\n *   (negative numbers count from end e.g. -1 is last argument, -2 is penultimate)\n * @param {Object} ns - CLS namespace to bind callbacks to\n * @returns {undefined}\n */\nmodule.exports = function(obj, methodName, args, ns) {\n\t// Skip non-existent methods\n\tif (!obj[methodName]) return;\n\n\t// Patch method\n\tshimmer.wrap(obj, methodName, function(original) {\n\t\treturn function() {\n\t\t\tfor (var i = 0; i < args.length; i++) {\n\t\t\t\tvar argIndex = args[i];\n\t\t\t\tif (argIndex < 0) argIndex += arguments.length;\n\n\t\t\t\tvar callback = arguments[argIndex];\n\t\t\t\tif (typeof callback === 'function') arguments[argIndex] = ns.bind(callback);\n\t\t\t}\n\n\t\t\treturn original.apply(this, arguments);\n\t\t};\n\t});\n};\n","map":{"mappings":[{"source":"node_modules/cls-bluebird/lib/shimMethod.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimMethod.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimMethod.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimMethod.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimMethod.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimMethod.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimMethod.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimMethod.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimMethod.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimMethod.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimMethod.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimMethod.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimMethod.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimMethod.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimMethod.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimMethod.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimMethod.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimMethod.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimMethod.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimMethod.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimMethod.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimMethod.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimMethod.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimMethod.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimMethod.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimMethod.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimMethod.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimMethod.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimMethod.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimMethod.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimMethod.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimMethod.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimMethod.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimMethod.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimMethod.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimMethod.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimMethod.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimMethod.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimMethod.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimMethod.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimMethod.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimMethod.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}}],"sources":{"node_modules/cls-bluebird/lib/shimMethod.js":"'use strict';\n\n/*\n * cls-bluebird\n * Function to shim an object method to retain CLS context\n */\n\n// Modules\nvar shimmer = require('shimmer');\n\n// Exports\n\n/**\n * Patch method to run callbacks in current CLS context.\n *\n * @param {Object} obj - Object on which to find method\n * @param {string} methodName - method name\n * @param {Array} args - Array of indexes of arguments which are callbacks\n *   (negative numbers count from end e.g. -1 is last argument, -2 is penultimate)\n * @param {Object} ns - CLS namespace to bind callbacks to\n * @returns {undefined}\n */\nmodule.exports = function(obj, methodName, args, ns) {\n\t// Skip non-existent methods\n\tif (!obj[methodName]) return;\n\n\t// Patch method\n\tshimmer.wrap(obj, methodName, function(original) {\n\t\treturn function() {\n\t\t\tfor (var i = 0; i < args.length; i++) {\n\t\t\t\tvar argIndex = args[i];\n\t\t\t\tif (argIndex < 0) argIndex += arguments.length;\n\n\t\t\t\tvar callback = arguments[argIndex];\n\t\t\t\tif (typeof callback === 'function') arguments[argIndex] = ns.bind(callback);\n\t\t\t}\n\n\t\t\treturn original.apply(this, arguments);\n\t\t};\n\t});\n};\n"},"lineCount":42}},"hash":"d3027acb349b741fbbaa30f6aa230c24","cacheData":{"env":{}}}