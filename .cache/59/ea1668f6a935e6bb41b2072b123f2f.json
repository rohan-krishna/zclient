{"id":"node_modules/sqlite3/lib/trace.js","dependencies":[{"name":"/home/rohan/zabbixScripts/zclient/package.json","includedInParent":true,"mtime":1551782286517},{"name":"/home/rohan/zabbixScripts/zclient/.babelrc","includedInParent":true,"mtime":1551702730921},{"name":"/home/rohan/zabbixScripts/zclient/node_modules/sqlite3/package.json","includedInParent":true,"mtime":1551782027078},{"name":"util","loc":{"line":2,"column":19},"parent":"/home/rohan/zabbixScripts/zclient/node_modules/sqlite3/lib/trace.js","resolved":"/usr/lib/node_modules/parcel-bundler/node_modules/util/util.js"}],"generated":{"js":"var __filename = \"/home/rohan/zabbixScripts/zclient/node_modules/sqlite3/lib/trace.js\";\n// Inspired by https://github.com/tlrobinson/long-stack-traces\nvar util = require('util');\n\nfunction extendTrace(object, property, pos) {\n    var old = object[property];\n    object[property] = function() {\n        var error = new Error();\n        var name = object.constructor.name + '#' + property + '(' + \n            Array.prototype.slice.call(arguments).map(function(el) {\n                return util.inspect(el, false, 0);\n            }).join(', ') + ')';\n\n        if (typeof pos === 'undefined') pos = -1;\n        if (pos < 0) pos += arguments.length;\n        var cb = arguments[pos];\n        if (typeof arguments[pos] === 'function') {\n            arguments[pos] = function replacement() {\n                try {\n                    return cb.apply(this, arguments);\n                } catch (err) {\n                    if (err && err.stack && !err.__augmented) {\n                        err.stack = filter(err).join('\\n');\n                        err.stack += '\\n--> in ' + name;\n                        err.stack += '\\n' + filter(error).slice(1).join('\\n');\n                        err.__augmented = true;\n                    }\n                    throw err;\n                }\n            };\n        }\n        return old.apply(this, arguments);\n    };\n}\nexports.extendTrace = extendTrace;\n\n\nfunction filter(error) {\n    return error.stack.split('\\n').filter(function(line) {\n        return line.indexOf(__filename) < 0;\n    });\n}\n","map":{"mappings":[{"source":"node_modules/sqlite3/lib/trace.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/sqlite3/lib/trace.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/sqlite3/lib/trace.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/sqlite3/lib/trace.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/sqlite3/lib/trace.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/sqlite3/lib/trace.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/sqlite3/lib/trace.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/sqlite3/lib/trace.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/sqlite3/lib/trace.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/sqlite3/lib/trace.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/sqlite3/lib/trace.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/sqlite3/lib/trace.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/sqlite3/lib/trace.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/sqlite3/lib/trace.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/sqlite3/lib/trace.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/sqlite3/lib/trace.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/sqlite3/lib/trace.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/sqlite3/lib/trace.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/sqlite3/lib/trace.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/sqlite3/lib/trace.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/sqlite3/lib/trace.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/sqlite3/lib/trace.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/sqlite3/lib/trace.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/sqlite3/lib/trace.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/sqlite3/lib/trace.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/sqlite3/lib/trace.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/sqlite3/lib/trace.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/sqlite3/lib/trace.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/sqlite3/lib/trace.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/sqlite3/lib/trace.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/sqlite3/lib/trace.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/sqlite3/lib/trace.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/sqlite3/lib/trace.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/sqlite3/lib/trace.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/sqlite3/lib/trace.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/sqlite3/lib/trace.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/sqlite3/lib/trace.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/sqlite3/lib/trace.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/sqlite3/lib/trace.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/sqlite3/lib/trace.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/sqlite3/lib/trace.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/sqlite3/lib/trace.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}}],"sources":{"node_modules/sqlite3/lib/trace.js":"// Inspired by https://github.com/tlrobinson/long-stack-traces\nvar util = require('util');\n\nfunction extendTrace(object, property, pos) {\n    var old = object[property];\n    object[property] = function() {\n        var error = new Error();\n        var name = object.constructor.name + '#' + property + '(' + \n            Array.prototype.slice.call(arguments).map(function(el) {\n                return util.inspect(el, false, 0);\n            }).join(', ') + ')';\n\n        if (typeof pos === 'undefined') pos = -1;\n        if (pos < 0) pos += arguments.length;\n        var cb = arguments[pos];\n        if (typeof arguments[pos] === 'function') {\n            arguments[pos] = function replacement() {\n                try {\n                    return cb.apply(this, arguments);\n                } catch (err) {\n                    if (err && err.stack && !err.__augmented) {\n                        err.stack = filter(err).join('\\n');\n                        err.stack += '\\n--> in ' + name;\n                        err.stack += '\\n' + filter(error).slice(1).join('\\n');\n                        err.__augmented = true;\n                    }\n                    throw err;\n                }\n            };\n        }\n        return old.apply(this, arguments);\n    };\n}\nexports.extendTrace = extendTrace;\n\n\nfunction filter(error) {\n    return error.stack.split('\\n').filter(function(line) {\n        return line.indexOf(__filename) < 0;\n    });\n}\n"},"lineCount":43}},"hash":"09527d372c91f299b4dd48d9ed067d59","cacheData":{"env":{}}}