{"id":"node_modules/tcp-ping/ping.js","dependencies":[{"name":"/home/rohan/zabbixScripts/zclient/package.json","includedInParent":true,"mtime":1551702724768},{"name":"/home/rohan/zabbixScripts/zclient/.babelrc","includedInParent":true,"mtime":1551702730921},{"name":"/home/rohan/zabbixScripts/zclient/node_modules/tcp-ping/package.json","includedInParent":true,"mtime":1551702129034},{"name":"net","loc":{"line":23,"column":18},"parent":"/home/rohan/zabbixScripts/zclient/node_modules/tcp-ping/ping.js","resolved":"/usr/lib/node_modules/parcel-bundler/src/builtins/_empty.js"},{"name":"process","parent":"/home/rohan/zabbixScripts/zclient/node_modules/tcp-ping/ping.js","resolved":"/usr/lib/node_modules/parcel-bundler/node_modules/process/browser.js"}],"generated":{"js":"var process = require(\"process\");\n//The MIT License (MIT)\n//\n//Copyright (c) 2014 Adam Paszke\n//\n//Permission is hereby granted, free of charge, to any person obtaining a copy\n//of this software and associated documentation files (the \"Software\"), to deal\n//in the Software without restriction, including without limitation the rights\n//to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n//copies of the Software, and to permit persons to whom the Software is\n//furnished to do so, subject to the following conditions:\n//\n//The above copyright notice and this permission notice shall be included in all\n//copies or substantial portions of the Software.\n//\n//THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n//SOFTWARE.\n\nvar net = require('net');\n\nvar ping = function(options, callback) {\n    var i = 0;\n    var results = [];\n    options.address = options.address || 'localhost';\n    options.port = options.port || 80;\n    options.attempts = options.attempts || 10;\n    options.timeout = options.timeout || 5000;\n    var check = function(options, callback) {\n        if(i < options.attempts) {\n            connect(options, callback);\n        } else {\n            var avg = results.reduce(function(prev, curr) {\n                return prev + curr.time;\n            }, 0);\n            var max = results.reduce(function(prev, curr) {\n                return (prev > curr.time) ? prev : curr.time;\n            }, results[0].time);\n            var min = results.reduce(function(prev, curr) {\n                return (prev < curr.time) ? prev : curr.time;\n            }, results[0].time);\n            avg = avg / results.length;\n            var out = {\n                address: options.address,\n                port: options.port,\n                attempts: options.attempts,\n                avg: avg,\n                max: max,\n                min: min,\n                results: results\n            };\n            callback(undefined, out);\n        }\n    };\n\n    var connect = function(options, callback) {\n        var s = new net.Socket();\n        var start = process.hrtime();\n        s.connect(options.port, options.address, function() {\n            var time_arr = process.hrtime(start);\n            var time = (time_arr[0] * 1e9 + time_arr[1]) / 1e6;\n            results.push({ seq: i, time: time });\n            s.destroy();\n            i++;\n            check(options, callback);\n        });\n        s.on('error', function(e) {\n            results.push({seq: i, time: undefined, err: e });\n            s.destroy();\n            i++;\n            check(options, callback);\n        });\n        s.setTimeout(options.timeout, function() {\n            results.push({seq: i, time: undefined, err: Error('Request timeout') });\n            s.destroy();\n            i++;\n            check(options, callback);\n        });\n    };\n    connect(options, callback);\n};\n\nmodule.exports.ping = ping;\n\nmodule.exports.probe = function(address, port, callback) {\n    address = address || 'localhost';\n    port = port || 80;\n    ping({ address: address, port: port, attempts: 1, timeout: 5000 }, function(err, data) {\n        var available = data.min !== undefined;\n        callback(err, available);\n    });\n};","map":{"mappings":[{"source":"node_modules/tcp-ping/ping.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/tcp-ping/ping.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/tcp-ping/ping.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/tcp-ping/ping.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/tcp-ping/ping.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/tcp-ping/ping.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/tcp-ping/ping.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/tcp-ping/ping.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/tcp-ping/ping.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/tcp-ping/ping.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/tcp-ping/ping.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/tcp-ping/ping.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/tcp-ping/ping.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/tcp-ping/ping.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/tcp-ping/ping.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/tcp-ping/ping.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/tcp-ping/ping.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/tcp-ping/ping.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/tcp-ping/ping.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/tcp-ping/ping.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/tcp-ping/ping.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/tcp-ping/ping.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/tcp-ping/ping.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/tcp-ping/ping.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/tcp-ping/ping.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/tcp-ping/ping.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/tcp-ping/ping.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/tcp-ping/ping.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/tcp-ping/ping.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/tcp-ping/ping.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/tcp-ping/ping.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/tcp-ping/ping.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/tcp-ping/ping.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/tcp-ping/ping.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/tcp-ping/ping.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/tcp-ping/ping.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/tcp-ping/ping.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/tcp-ping/ping.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/tcp-ping/ping.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/tcp-ping/ping.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/tcp-ping/ping.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/tcp-ping/ping.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/tcp-ping/ping.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/tcp-ping/ping.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/tcp-ping/ping.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/tcp-ping/ping.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/tcp-ping/ping.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/tcp-ping/ping.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/tcp-ping/ping.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/tcp-ping/ping.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/tcp-ping/ping.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/tcp-ping/ping.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/tcp-ping/ping.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/tcp-ping/ping.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/tcp-ping/ping.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/tcp-ping/ping.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/tcp-ping/ping.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/tcp-ping/ping.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/tcp-ping/ping.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/tcp-ping/ping.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/tcp-ping/ping.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/tcp-ping/ping.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/tcp-ping/ping.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/tcp-ping/ping.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/tcp-ping/ping.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/tcp-ping/ping.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/tcp-ping/ping.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/tcp-ping/ping.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/tcp-ping/ping.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/tcp-ping/ping.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/tcp-ping/ping.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/tcp-ping/ping.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/tcp-ping/ping.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/tcp-ping/ping.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/tcp-ping/ping.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/tcp-ping/ping.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/tcp-ping/ping.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/tcp-ping/ping.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/tcp-ping/ping.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/tcp-ping/ping.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/tcp-ping/ping.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/tcp-ping/ping.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/tcp-ping/ping.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/tcp-ping/ping.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/tcp-ping/ping.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/tcp-ping/ping.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/tcp-ping/ping.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/tcp-ping/ping.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/tcp-ping/ping.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/tcp-ping/ping.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/tcp-ping/ping.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/tcp-ping/ping.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/tcp-ping/ping.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/tcp-ping/ping.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/tcp-ping/ping.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}}],"sources":{"node_modules/tcp-ping/ping.js":"//The MIT License (MIT)\n//\n//Copyright (c) 2014 Adam Paszke\n//\n//Permission is hereby granted, free of charge, to any person obtaining a copy\n//of this software and associated documentation files (the \"Software\"), to deal\n//in the Software without restriction, including without limitation the rights\n//to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n//copies of the Software, and to permit persons to whom the Software is\n//furnished to do so, subject to the following conditions:\n//\n//The above copyright notice and this permission notice shall be included in all\n//copies or substantial portions of the Software.\n//\n//THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n//SOFTWARE.\n\nvar net = require('net');\n\nvar ping = function(options, callback) {\n    var i = 0;\n    var results = [];\n    options.address = options.address || 'localhost';\n    options.port = options.port || 80;\n    options.attempts = options.attempts || 10;\n    options.timeout = options.timeout || 5000;\n    var check = function(options, callback) {\n        if(i < options.attempts) {\n            connect(options, callback);\n        } else {\n            var avg = results.reduce(function(prev, curr) {\n                return prev + curr.time;\n            }, 0);\n            var max = results.reduce(function(prev, curr) {\n                return (prev > curr.time) ? prev : curr.time;\n            }, results[0].time);\n            var min = results.reduce(function(prev, curr) {\n                return (prev < curr.time) ? prev : curr.time;\n            }, results[0].time);\n            avg = avg / results.length;\n            var out = {\n                address: options.address,\n                port: options.port,\n                attempts: options.attempts,\n                avg: avg,\n                max: max,\n                min: min,\n                results: results\n            };\n            callback(undefined, out);\n        }\n    };\n\n    var connect = function(options, callback) {\n        var s = new net.Socket();\n        var start = process.hrtime();\n        s.connect(options.port, options.address, function() {\n            var time_arr = process.hrtime(start);\n            var time = (time_arr[0] * 1e9 + time_arr[1]) / 1e6;\n            results.push({ seq: i, time: time });\n            s.destroy();\n            i++;\n            check(options, callback);\n        });\n        s.on('error', function(e) {\n            results.push({seq: i, time: undefined, err: e });\n            s.destroy();\n            i++;\n            check(options, callback);\n        });\n        s.setTimeout(options.timeout, function() {\n            results.push({seq: i, time: undefined, err: Error('Request timeout') });\n            s.destroy();\n            i++;\n            check(options, callback);\n        });\n    };\n    connect(options, callback);\n};\n\nmodule.exports.ping = ping;\n\nmodule.exports.probe = function(address, port, callback) {\n    address = address || 'localhost';\n    port = port || 80;\n    ping({ address: address, port: port, attempts: 1, timeout: 5000 }, function(err, data) {\n        var available = data.min !== undefined;\n        callback(err, available);\n    });\n};"},"lineCount":96}},"hash":"4c3d8d602b0548272e74eb4b45ac2b85","cacheData":{"env":{}}}