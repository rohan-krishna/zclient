{"id":"node_modules/cls-bluebird/lib/shimCoroutine.js","dependencies":[{"name":"/home/rohan/zabbixScripts/zclient/package.json","includedInParent":true,"mtime":1551782286517},{"name":"/home/rohan/zabbixScripts/zclient/.babelrc","includedInParent":true,"mtime":1551702730921},{"name":"/home/rohan/zabbixScripts/zclient/node_modules/cls-bluebird/package.json","includedInParent":true,"mtime":1551774909521},{"name":"shimmer","loc":{"line":17,"column":22},"parent":"/home/rohan/zabbixScripts/zclient/node_modules/cls-bluebird/lib/shimCoroutine.js","resolved":"/home/rohan/zabbixScripts/zclient/node_modules/shimmer/index.js"}],"generated":{"js":"'use strict';\n\n/*\n * cls-bluebird\n * Function to shim `Promise.coroutine`\n *\n * Works by binding the `.next()` and `.throw()` methods of generator to CLS context\n * at time when coroutine is executed.\n *\n * In bluebird v3.x, running the coroutine internally calls `.lastly()` if cancellation is enabled.\n * To prevent unnecessary binding of the `.lastly()` callback to CLS context, this patch\n * temporarily disables the patch on `Promise.prototype.lastly`.\n * NB This patch could break if bluebird internals change, but this is covered by the tests.\n */\n\n// Modules\nvar shimmer = require('shimmer');\n\n// Exports\n\n/**\n * Patch `Promise.coroutine` or `Promise.spawn` to maintain current CLS context after all `yield` statements.\n *\n * @param {string} methodName - method name (either 'coroutine' or 'spawn')\n * @param {Function} Promise - Bluebird Promise constructor to patch\n * @param {Object} ns - CLS namespace to bind callbacks to\n * @returns {undefined}\n */\nmodule.exports = function(methodName, Promise, ns, v3) {\n\tvar lastlyPatched = Promise.prototype.lastly,\n\t\tlastlyOriginal = Promise.prototype.lastly.__original;\n\n\t// Patch method\n\tshimmer.wrap(Promise, methodName, function(original) {\n\t\treturn function(generatorFunction, options) {\n\t\t\t// NB If `generatorFunction` is not a function, do not alter it.\n\t\t\t// Pass value directly to bluebird which will throw an error.\n\t\t\tif (typeof generatorFunction === 'function') {\n\t\t\t\t// Create proxy generator function\n\t\t\t\tvar generatorFunctionOriginal = generatorFunction;\n\t\t\t\tgeneratorFunction = function() {\n\t\t\t\t\t// Create generator from generator function\n\t\t\t\t\tvar generator = generatorFunctionOriginal.apply(this, arguments);\n\n\t\t\t\t\t// Bind `.next()`, '.throw()' and `.return()` to current CLS context.\n\t\t\t\t\t// NB CLS context is from when coroutine is called, not when created.\n\t\t\t\t\t['next', 'throw', 'return'].forEach(function(name) {\n\t\t\t\t\t\tif (typeof generator[name] === 'function') generator[name] = ns.bind(generator[name]);\n\t\t\t\t\t});\n\n\t\t\t\t\treturn generator;\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// Temporarily remove patch from `Promise.prototype.lastly` in bluebird v3\n\t\t\t// to avoid unnecessary binding to CLS context.\n\t\t\tvar self = this;\n\t\t\tif (methodName === 'spawn' && v3) {\n\t\t\t\treturn tempPatchLastly(function() {\n\t\t\t\t\treturn original.call(self, generatorFunction, options);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tvar fn = original.call(this, generatorFunction, options);\n\n\t\t\tif (methodName === 'coroutine' && v3) {\n\t\t\t\treturn function() {\n\t\t\t\t\tvar self = this, args = arguments;\n\t\t\t\t\treturn tempPatchLastly(function() {\n\t\t\t\t\t\treturn fn.apply(self, args);\n\t\t\t\t\t});\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn fn;\n\t\t};\n\t});\n\n\tfunction tempPatchLastly(fn) {\n\t\tPromise.prototype.lastly = lastlyOriginal;\n\t\tvar res = fn();\n\t\tPromise.prototype.lastly = lastlyPatched;\n\t\treturn res;\n\t}\n};\n","map":{"mappings":[{"source":"node_modules/cls-bluebird/lib/shimCoroutine.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimCoroutine.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimCoroutine.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimCoroutine.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimCoroutine.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimCoroutine.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimCoroutine.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimCoroutine.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimCoroutine.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimCoroutine.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimCoroutine.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimCoroutine.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimCoroutine.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimCoroutine.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimCoroutine.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimCoroutine.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimCoroutine.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimCoroutine.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimCoroutine.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimCoroutine.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimCoroutine.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimCoroutine.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimCoroutine.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimCoroutine.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimCoroutine.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimCoroutine.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimCoroutine.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimCoroutine.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimCoroutine.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimCoroutine.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimCoroutine.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimCoroutine.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimCoroutine.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimCoroutine.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimCoroutine.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimCoroutine.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimCoroutine.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimCoroutine.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimCoroutine.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimCoroutine.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimCoroutine.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimCoroutine.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimCoroutine.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimCoroutine.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimCoroutine.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimCoroutine.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimCoroutine.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimCoroutine.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimCoroutine.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimCoroutine.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimCoroutine.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimCoroutine.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimCoroutine.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimCoroutine.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimCoroutine.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimCoroutine.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimCoroutine.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimCoroutine.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimCoroutine.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimCoroutine.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimCoroutine.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimCoroutine.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimCoroutine.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimCoroutine.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimCoroutine.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimCoroutine.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimCoroutine.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimCoroutine.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimCoroutine.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimCoroutine.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimCoroutine.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimCoroutine.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimCoroutine.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimCoroutine.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimCoroutine.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimCoroutine.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimCoroutine.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimCoroutine.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimCoroutine.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimCoroutine.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimCoroutine.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimCoroutine.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimCoroutine.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimCoroutine.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimCoroutine.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/cls-bluebird/lib/shimCoroutine.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}}],"sources":{"node_modules/cls-bluebird/lib/shimCoroutine.js":"'use strict';\n\n/*\n * cls-bluebird\n * Function to shim `Promise.coroutine`\n *\n * Works by binding the `.next()` and `.throw()` methods of generator to CLS context\n * at time when coroutine is executed.\n *\n * In bluebird v3.x, running the coroutine internally calls `.lastly()` if cancellation is enabled.\n * To prevent unnecessary binding of the `.lastly()` callback to CLS context, this patch\n * temporarily disables the patch on `Promise.prototype.lastly`.\n * NB This patch could break if bluebird internals change, but this is covered by the tests.\n */\n\n// Modules\nvar shimmer = require('shimmer');\n\n// Exports\n\n/**\n * Patch `Promise.coroutine` or `Promise.spawn` to maintain current CLS context after all `yield` statements.\n *\n * @param {string} methodName - method name (either 'coroutine' or 'spawn')\n * @param {Function} Promise - Bluebird Promise constructor to patch\n * @param {Object} ns - CLS namespace to bind callbacks to\n * @returns {undefined}\n */\nmodule.exports = function(methodName, Promise, ns, v3) {\n\tvar lastlyPatched = Promise.prototype.lastly,\n\t\tlastlyOriginal = Promise.prototype.lastly.__original;\n\n\t// Patch method\n\tshimmer.wrap(Promise, methodName, function(original) {\n\t\treturn function(generatorFunction, options) {\n\t\t\t// NB If `generatorFunction` is not a function, do not alter it.\n\t\t\t// Pass value directly to bluebird which will throw an error.\n\t\t\tif (typeof generatorFunction === 'function') {\n\t\t\t\t// Create proxy generator function\n\t\t\t\tvar generatorFunctionOriginal = generatorFunction;\n\t\t\t\tgeneratorFunction = function() {\n\t\t\t\t\t// Create generator from generator function\n\t\t\t\t\tvar generator = generatorFunctionOriginal.apply(this, arguments);\n\n\t\t\t\t\t// Bind `.next()`, '.throw()' and `.return()` to current CLS context.\n\t\t\t\t\t// NB CLS context is from when coroutine is called, not when created.\n\t\t\t\t\t['next', 'throw', 'return'].forEach(function(name) {\n\t\t\t\t\t\tif (typeof generator[name] === 'function') generator[name] = ns.bind(generator[name]);\n\t\t\t\t\t});\n\n\t\t\t\t\treturn generator;\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// Temporarily remove patch from `Promise.prototype.lastly` in bluebird v3\n\t\t\t// to avoid unnecessary binding to CLS context.\n\t\t\tvar self = this;\n\t\t\tif (methodName === 'spawn' && v3) {\n\t\t\t\treturn tempPatchLastly(function() {\n\t\t\t\t\treturn original.call(self, generatorFunction, options);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tvar fn = original.call(this, generatorFunction, options);\n\n\t\t\tif (methodName === 'coroutine' && v3) {\n\t\t\t\treturn function() {\n\t\t\t\t\tvar self = this, args = arguments;\n\t\t\t\t\treturn tempPatchLastly(function() {\n\t\t\t\t\t\treturn fn.apply(self, args);\n\t\t\t\t\t});\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn fn;\n\t\t};\n\t});\n\n\tfunction tempPatchLastly(fn) {\n\t\tPromise.prototype.lastly = lastlyOriginal;\n\t\tvar res = fn();\n\t\tPromise.prototype.lastly = lastlyPatched;\n\t\treturn res;\n\t}\n};\n"},"lineCount":86}},"hash":"0f84f7f6b2210df4df139d2a8bde26cb","cacheData":{"env":{}}}